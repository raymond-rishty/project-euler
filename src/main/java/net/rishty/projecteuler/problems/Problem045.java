package net.rishty.projecteuler.problems;

import com.google.common.base.Stopwatch;

import static com.google.common.math.IntMath.sqrt;
import static java.math.RoundingMode.UNNECESSARY;

/**
 * Triangular, pentagonal, and hexagonal
 * Problem 45
 * <p>
 * Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
 * <p>
 * Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
 * Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
 * Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
 * It can be verified that T285 = P165 = H143 = 40755.
 * <p>
 * Find the next triangle number that is also pentagonal and hexagonal.
 */
public class Problem045 {
    public static void main(String[] args) {
        Stopwatch stopwatch = Stopwatch.createStarted();
        new Problem045().run();
        System.out.println(stopwatch);
    }

    private void run() {
        // A number that is both pentagonal and hexagonal is sufficient, as hexagonal numbers are all triangular.
        int pentagonalHexagonal = findPentagonalHexagonalAfter(40755);
        System.out.println(pentagonalHexagonal);
    }

    private int findPentagonalHexagonalAfter(int lowerBound) {
        int pv = lowerBound;
        int hv = lowerBound;

        int pn = (1 + sqrt(1 + 24 * pv, UNNECESSARY)) / 6; // 165
        int hn = (1 + sqrt(1 + 8 * hv, UNNECESSARY)) / 4; // 143

        // advance the pentagonal or hexagonal, whichever is lower, until we find a match.
        do {
            if (pv < hv) {
                pv = pv + 3 * (++pn) - 2;
            } else {
                hv = hv + 4 * (++hn) - 3;
            }
        } while (pv != hv);

        return pv;
    }
}
